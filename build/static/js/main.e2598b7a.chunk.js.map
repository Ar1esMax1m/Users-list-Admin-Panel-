{"version":3,"sources":["App.js","index.js"],"names":["checkLocalStorage","items","localStorage","getItem","JSON","parse","i","id","name","status","email","tel","pass","expand","dateCreate","getDate","dateChange","setItem","stringify","Date","toString","App","className","data","rootUpdate","this","forceUpdate","bind","React","Component","responseValidator","isValid","type","msg","title","notification","AdminPanel","props","state","afterSaveCell","onDeleteRow","onInsertRow","oldValue","newValue","row","column","index","indexOf","console","log","push","rowKeys","filter","item","length","value","cell","enumObject","options","page","prePage","nextPage","firstPage","lastPage","afterInsertRow","afterDeleteRow","cellEditProp","mode","statusUserType","0","1","2","expandableRow","expandComponent","expandRow","expandColumnOptions","expandColumnVisible","pagination","insertRow","deleteRow","selectRow","clickToSelect","clickToExpand","cellEdit","search","multiColumnSearch","isKey","dataField","width","headerAlign","dataAlign","searchable","editable","validator","emptyValidator","values","filterFormatted","dataFormat","enumFormatter","formatExtraData","defaultValue","telValidator","passwordValidator","ExpandTable","trClassName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2598b7a.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  BootstrapTable,\n  TableHeaderColumn,\n} from \"react-bootstrap-table\";\nimport \"../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\nimport \"./App.scss\";\n\nfunction checkLocalStorage() {\n  let items = [];\n\n  if (!localStorage.getItem(\"items\")) {\n    for (let i = 0; i < 100; ++i) {\n      items[i] = {\n        id: i,\n        name: \"Max \" + i,\n        status: 0,\n        email: \"ar1esmax1mwork@gmail.com\",\n        tel: \"89873520883\",\n        pass: \"123456789\",\n        expand: [{ dateCreate: getDate(), dateChange: \"\" }],\n      };\n    }\n    localStorage.setItem(\"items\", JSON.stringify(items));\n  } else {\n    items = JSON.parse(localStorage.getItem(\"items\"));\n  }\n  return items;\n}\n\nfunction getDate() {\n  let date = new Date(); \n  return  date.toString();\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"content-wrapper\">\n          <div className=\"title\">Admin-Panel</div>\n          <AdminPanel data={checkLocalStorage()} rootUpdate={this.forceUpdate.bind(this)} />\n        </div>\n      </div>\n    );\n  }\n}\n\n// функция, возвращающая результат валидации (объект)\nfunction responseValidator(isValid, type, msg, title) {\n  return {\n    isValid: isValid,\n    notification: { type: type, msg: msg, title: title },\n  };\n}\n\n// Админ-панель\nclass AdminPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { items: this.props.data };\n\n    this.afterSaveCell = this.afterSaveCell.bind(this);\n    this.onDeleteRow = this.onDeleteRow.bind(this);\n    this.onInsertRow = this.onInsertRow.bind(this);\n  }\n\n  // обновление хранилища\n  afterSaveCell(oldValue, newValue, row, column) {\n    if (oldValue !== newValue) {\n      let index = this.state.items.indexOf(oldValue);\n      console.log()\n      this.state.items[index].expand[0].dateChange = getDate();\n      localStorage.setItem(\"items\", JSON.stringify(this.state.items));\n    }\n  }\n\n  onInsertRow(row) {\n    row.expand = [{dateCreate: getDate(), dateChange: ''}];\n    this.state.items.push(row);\n    localStorage.setItem(\"items\", JSON.stringify(this.state.items))\n  }\n\n  onDeleteRow(rowKeys) {\n    for(let i = 0; i != rowKeys.length; i++){\n      this.state.items = this.state.items.filter((item) => {return item.id !== rowKeys[i]})\n    }\n    localStorage.setItem(\"items\", JSON.stringify(this.state.items))\n  }\n\n  expandRow(row) {\n    return <ExpandTable data={row.expand} />;\n  }\n\n  // методы, вызывающие функцию создания объекта результата валидации\n  emptyValidator(value) {\n    if (!value) {\n      return responseValidator(\n        false,\n        \"error\",\n        \"Поле не может быть пустым!\",\n        \"Ошибка\"\n      );\n    } else {\n      return responseValidator(true, \"success\");\n    }\n  }\n\n  telValidator(value) {\n    if (value.length !== 11) {\n      return responseValidator(\n        false,\n        \"error\",\n        \"Номер должен содержать 11 символов\",\n        \"Ошибка\"\n      );\n    } else {\n      return responseValidator(true, \"success\");\n    }\n  }\n\n  passwordValidator(value) {\n    if (value.length < 8 || value.length > 16) {\n      return responseValidator(\n        false,\n        \"error\",\n        \"Пароль должен содержать от 8 до 16 символов\",\n        \"Ошибка\"\n      );\n    } else {\n      return responseValidator(true, \"success\");\n    }\n  }\n\n  // Фильтрация и поиск\n  enumFormatter(cell, row, enumObject) {\n    return enumObject[cell];\n  }\n\n  render() {\n    const options = {\n      page: 1,\n      prePage: \"⟵\",\n      nextPage: \"⟶\",\n      firstPage: \"⟸\",\n      lastPage: \"⟹\",\n      afterInsertRow: this.onInsertRow,\n      afterDeleteRow: this.onDeleteRow,\n    };\n\n    const selectRowProp = {\n      mode: \"checkbox\",\n      clickToSelect: false,\n      clickToExpand: true,\n    };\n\n    const cellEditProp = {\n      mode: \"dbclick\",\n      afterSaveCell: this.afterSaveCell,\n    };\n\n    const statusUser = [0, 1, 2];\n\n    const statusUserType = {\n      0: \"Client\",\n      1: \"Partner\",\n      2: \"Admin\",\n    };\n    return (\n      <BootstrapTable\n        data={this.props.data}\n        expandableRow={() => {\n          return true;\n        }}\n        expandComponent={this.expandRow}\n        expandColumnOptions={{ expandColumnVisible: true }}\n        options={options}\n        pagination={true}\n        insertRow={true}\n        deleteRow={true}\n        selectRow={selectRowProp}\n        cellEdit={cellEditProp}\n        search={true}\n        multiColumnSearch={true}\n      >\n        <TableHeaderColumn\n          isKey\n          dataField=\"id\"\n          width=\"70\"\n          headerAlign=\"center\"\n          dataAlign=\"center\"\n          searchable={false}\n        >\n          ID\n        </TableHeaderColumn>\n        <TableHeaderColumn\n          dataField=\"name\"\n          headerAlign=\"center\"\n          dataAlign=\"center\"\n          editable={{ type: \"text\", validator: this.emptyValidator }}\n          searchable={false}\n        >\n          ФИО\n        </TableHeaderColumn>\n        <TableHeaderColumn\n          dataField=\"status\"\n          headerAlign=\"center\"\n          dataAlign=\"center\"\n          editable={{\n            type: \"select\",\n            options: { values: statusUser, validator: this.emptyValidator },\n          }}\n          filterFormatted\n          dataFormat={this.enumFormatter}\n          formatExtraData={statusUserType}\n          filter={{\n            type: \"SelectFilter\",\n            options: statusUserType,\n            defaultValue: 0,\n          }}\n          searchable={false}\n        >\n          Статус\n        </TableHeaderColumn>\n        <TableHeaderColumn\n          dataField=\"email\"\n          headerAlign=\"center\"\n          dataAlign=\"center\"\n          editable={{ type: \"email\", validator: this.emptyValidator }}\n        >\n          Почта\n        </TableHeaderColumn>\n        <TableHeaderColumn\n          dataField=\"tel\"\n          headerAlign=\"center\"\n          dataAlign=\"center\"\n          editable={{ type: \"tel\", validator: this.telValidator }}\n        >\n          Телефон\n        </TableHeaderColumn>\n        <TableHeaderColumn\n          dataField=\"pass\"\n          headerAlign=\"center\"\n          dataAlign=\"center\"\n          editable={{ type: \"password\", validator: this.passwordValidator }}\n          searchable={false}\n        >\n          Пароль\n        </TableHeaderColumn>\n      </BootstrapTable>\n    );\n  }\n}\n\nclass ExpandTable extends React.Component {\n  render() {\n    if (this.props.data) {\n      return (\n        <BootstrapTable data={this.props.data} trClassName=\"expand-table\">\n          <TableHeaderColumn\n            dataField=\"dateCreate\"\n            isKey={true}\n            headerAlign=\"center\"\n            dataAlign=\"center\"\n            editable={{ type: \"datetime\" }}\n          >\n            Дата создания\n          </TableHeaderColumn>\n          <TableHeaderColumn\n            dataField=\"dateChange\"\n            headerAlign=\"center\"\n            dataAlign=\"center\"\n            editable={{ type: \"datetime\" }}\n          >\n            Дата изменения\n          </TableHeaderColumn>\n        </BootstrapTable>\n      );\n    } else {\n      return <p>Пусто!</p>;\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}